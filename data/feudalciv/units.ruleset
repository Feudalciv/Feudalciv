; This is the feudalciv ruleset. See doc/README.ruleset_feudalciv
; for a detailed description.

; Modifying this file:
; You should not modify this file except to make bugfixes or
; for other "maintenance".  If you want to make custom changes,
; you should create a new datadir subdirectory and copy this file
; into that directory, and then modify that copy.  Then use the
; command "rulesetdir <mysubdir>" in the server to have freeciv
; use your new customized file.
;
; You should sort role units from worst to better, as often the best
; available role unit of a given sort will be picked by choosing
; the first available (not obsolete) such unit, or by picking the last
; such unit directly. When determining starting units, the first 
; unit with the relevant role that the player can build will be chosen.
; If no such unit can be found (eg Explorers that require Seafaring),
; then the first unit with this role will be chosen.

[datafile]
description="unit data for Feudalciv"
options="+Freeciv-2.5-ruleset"

[control]
; Names for custom unit type flags. There can be up to 16 of these.
; name          = rule name; not translateable, but may be displayed in
;                 some circumstances
; helptxt       = displayed in the help for units with this flag (optional)
flags =
  { "name", "helptxt"
    _("Airbase")
    _("Transform")
    _("AirAttacker"), _("Very bad at attacking AEGIS.")
    _("Horse"), _("Attack value halved when attacking Pikemen.")
    _("Helicopter"), _("Defends very badly against Fighters.")
  }

[veteran_system]
; What are the names of the levels?
veteran_names = _("green"), _("veteran"), _("hardened"), _("elite")

; The percentage chance of increasing level through combat
veteran_raise_chance = 50, 33, 20, 0

; The percentage chance of a settler/engineer increasing level through
; performing useful work (per turn)
veteran_work_raise_chance = 0, 0, 0, 0

; Power factors are as a percentage.
; +50% is represented by 150
veteran_power_fact = 100, 150, 175, 200

; The additional number of movement points granted for different veteran
; levels. These are fractional move points as defined by move_fragments in
; terrain.ruleset.
veteran_move_bonus = 0, 0, 0, 0

; /* <-- avoid gettext warnings
;
; Unit classes
; The number can be variable, up to 32
; When adding new classes, remember to check effects.ruleset also.
; Eg. if you divide class 'Land' to two separate classes, you may
; want add effect giving City Walls defence bonus against new class
; too.
;
; The actual tag used (the * in [unitclass_*]) does not matter, except 
; it must be unique within this file, and it may be used in debug 
; output when reading this file.
;
; ** Fields **
;
; name          = translatable name as seen by user
; rule_name     = (optional) name for savegames, rulesets etc; if not
;                 present, 'name' is used. Since the name used in savegames
;                 must not change, use this when renaming a unit class after a
;                 ruleset has been released.
; move_type     = Where unit moves; "Land", "Sea", or "Both".
;                 This is optional field. If it's not
;                 given, move type is automatically determined from native
;                 terrains. You need to set it only if you want to set move
;                 type "Both" for unit that has no native Land terrains or
;                 for unit that has no native Oceanic terrains.
; min_speed     = Minimum speed after damage and effects (whole movement points)
; hp_loss_pct   = Hitpoints lost each turn if unit not in city or native base
; non_native_def_pct = Defense power percentage applying when defending on
;                      non-native terrain (such as ship in harbour)
; hut_behavior  = What happens to huts when unit enters tile:
;                 "Normal", "Nothing" or "Frighten"
; flags         = List of unit class flags (from the following list; you
;                 cannot add custom unit class flags)
;
; ** Unit class Flags **
;
; "TerrainSpeed"   = Units use terrain specific speed
; "TerrainDefense" = Units gain defense bonus from terrain
; "DamageSlows"   = Damaged units are slowed down
; "CanOccupyCity" = Military units of this class can occupy enemy cities
; "Missile"       = Unit is destroyed when it attacks
; "BuildAnywhere" = Unit can be built even in the middle of non-native terrain
; "Unreachable"   = Unit can be attacked only by units explicitly listing this
;                   class in its 'targets', unless on a city or native base.
;                   For class members which are transports, cargo cannot load/
;                   unload except in a city or native base, unless that unit
;                   explicitly lists this class in its 'embarks'/'disembarks'.
; "CollectRansom" = Unit can collect ransom when killing lone barbarian leader
; "ZOC"           = Unit is subject to ZOC rules. Unit type flag "IgZOC" can
;                   override this
; "CanFortify"    = Unit can fortify at land tiles
; "CanPillage"    = Unit can pillage tile infrastructure
; "DoesntOccupyTile"  = Even if this kind of enemy unit is on tile, cities can
;                       still work that tile
; "AttackNonNative"   = Unit can attack units on non-native tiles. Unit type
;                       flag "Only_Native_Attack" can override this
; "AttFromNonNative"  = Unit can launch attach from non-native tile (against
;                       native one)
;                       This applies for both attacking from transport or
;                       cities. If only some unit types of the class should
;                       get this property, use type flag "Marines"
; "KillCitizen"       = Upon successful attack against a city, unit kills one
;                       citizen. The effect "Unit_No_Lose_Pop" and the server
;                       setting 'killcitizen' can disable this.
;
; */ <-- avoid gettext warnings

[unitclass_land]
; /* TRANS: Unit class: used adjectivally */
name          = _("?unitclass:Land")
min_speed     = 1
hp_loss_pct   = 0
flags         = "TerrainSpeed", "DamageSlows", "CanOccupyCity", "BuildAnywhere",
                "CollectRansom", "ZOC", "CanFortify", "CanPillage",
                "TerrainDefense", "KillCitizen"

[unitclass_land_big]
; /* TRANS: "Big Land" is a unit class, like Land or Sea. Big Land units */
; /* TRANS: cannot move into rough terrain. Unit class names are used */
; /* TRANS: adjectivally. */
name          = _("?unitclass:Big Land")
min_speed     = 1
hp_loss_pct   = 0
flags         = "TerrainSpeed", "DamageSlows", "CanOccupyCity", "BuildAnywhere",
                "CollectRansom", "ZOC", "CanFortify", "CanPillage",
                "TerrainDefense", "KillCitizen"

[unitclass_sea]
; /* TRANS: Unit class: used adjectivally */
name          = _("?unitclass:Sea")
min_speed     = 2
hp_loss_pct   = 0
flags         = "DamageSlows", "AttackNonNative", "AttFromNonNative"

[unitclass_trireme]
; /* TRANS: Unit class: used adjectivally */
name          = _("?unitclass:Trireme")
min_speed     = 2
hp_loss_pct   = 0
flags         = "DamageSlows", "AttFromNonNative"

; /* <-- avoid gettext warnings
;
; Below: The individual units, one per section.
;
; The number can be variable, up to 200.  
; However for the "official" rulesets, units should not be removed 
; because that would break backward compatability with savegames.
;
; The order here matters: later units are considered "better" for
; a given flag or role.  
;
; The actual tag used (the * in [unit_*]) does not matter, except 
; it must be unique within this file, and it may be used in debug 
; output when reading this file.
;
; ** Fields **
;
; name          = translatable name as seen by user
; rule_name     = (optional) name for savegames, rulesets etc; if not
;                 present, 'name' is used. Since the name used in savegames
;                 must not change, use this when renaming a unit after a
;                 ruleset has been released.
; graphic       = tag specifying preferred graphic
; graphic_alt	= tag for alternate garphic if preferred graphic is not 
;		  present; especially if preferred graphic is non-standard, 
;		  this should be a standard tag.  Otherwise can use eg "-" 
;		  for no alternate graphic.
; tech_req      = required advance, names from techs.ruleset, or special:
;                 "None" => available from start
; impr_req	= required city improvement, names from buildings.ruleset
; gov_req       = required government, names from governments.ruleset
; obsolete_by   = can be upgraded to and made obsolete by another unit by name
; build_cost    = production shields required to build
; pop_cost      = population removed from city when built; for 'AddToCity'
;                 units this is also the population added to the destination
; attack        = base attack strength (0 = cannot attack)
; defense       = base defense strength (0 = cannot defend)
; hitpoints     = how much damage unit can withstand
; firepower     = number of hitpoints removed per round of combat; at least 1
; move_rate     = base move rate (whole movement points)
; vision_radius_sq = base vision of unit: unit can see tile up to the square
;                 root of this value away
; convert_to    = can be converted to another type of unit by name
; convert_time  = time it takes to convert to another unit type
; class         = One of the classes listed above
; transport_cap = Number of units (ground, or air/missiles, depending on flags)
; fuel          = number of turns air units can fly before they crash. For
;                 barbarians this is used as lifetime instead. If this is zero,
;                 the unit has unlimited fuel, despite flying.
; uk_*          = upkeep costs, these are used as base values in the game
; cargo         = Unit classes this unit can transport
; city_size     = Initial size of the cities built by 'Cities' type units
;                 (but 'AddToCity' uses pop_cost)
; targets       = list of unit classes this unit can attack against even
;                 if they have Unreachable unit class flag
; embarks       = list of unit classes this unit may load into while not in
;                 native base or city even if transporter has Unreachable unit
;                 class flag
; disembarks    = list of unit classes this unit may unload from while not in
;                 native base or city even if transporter has Unreachable unit
;                 class flag
; bonuses       = definitions of combat bonuses against specific other units
; bonuses.flag  = flag of the unit that bonus applies against
; bonuses.type  = type of the bonus. See below
; bonuses.value = value of the bonus. Sum of these is used if multiple apply.
; flags         = special flag strings; list of built-in flags described below
;                 and/or user flags defined above
;
; veteran_names = Special veteran level for this unit. See the definitions in
;                 game.ruleset. All of the veteran_* entries have to have the
;                 same length!
; veteran_raise_chance =
; veteran_work_raise_chance =
; veteran_power_fact =
; veteran_move_bonus =
;
; roles         = special role strings
; sound_move	= optional sound effect when the unit moves
; sound_move_alt= optional alternative sound effect if above not
;		  supported in client
; sound_fight	= optional sound effect when the unit fights
; sound_fight_alt= optional alternative sound effect if above not
;		   supported in client
; helptext	= optional help text string; should escape all raw newlines 
;		  so that xgettext parsing works
;
;
; ** Bonuses **
;
; "DefenseMultiplier" = Multiply defense value (1 + 'value') times.
;                       Value of 1 means multiplication by 2, value 2 by 3...
;                       Bonus is defined in defenders entry.
; "DefenseDivider"    = Divide defense value with (1 + 'value').
;                       Bonus is defined in attackers entry.
; "FirePower1"        = Defender firepower is reduced to value 1 when
;                       ever this has non-zero value.
;                       Bonus is defined in attackers entry.
;
;
; ** Flags **
;
; "HelpWonder"	= can help build wonders
; "TradeRoute"	= can establish trade routes
; "IgZOC"       = ignore Zones of Control (ZOC) even if unit class has
;                 "ZOC" flag
; "NonMil"	= a non-military unit: no attacks; no martial law; can enter
;                 peaceful borders; DoesntOccupyTile
; "IgTer"       = use constant move cost defined in igter_cost (terrain.ruleset)
;                 rather than terrain/road etc cost, unless terrain cost is
;                 less
; "OneAttack"	= can only make a single attack, regardless of movement points
; "IgWall"	= ignore effect of city walls
; "FieldUnit"	= cause unhappiness even when not being aggressive
; "Marines"	= can attack from non-native tile (from transport or city)
; "Partial_Invis" = visible only to adjancent units; does not hide transported
;		  units other than missiles
; "Settlers"	= can irrigate and build roads
; "Diplomat"	= can do diplomat actions (see diplchance server option)
; "Spy"		= can do poison and sabotage, _must_ be "Diplomat" also
; "Trireme"	= (sea only) cannot leave shoreline
; "Nuclear"	= nuke!
; "Paratroopers"= can paradrop
; "Cities"      = can disband to produce a city (initial population city_size)
; "Only_Native_Attack" = cannot attack targets on non-native tiles even if
;                 unit class can
; "AddToCity"   = can disband to add pop_cost population to a city
;                 (see cities.ruleset for limitation of this ability)
; "Fanatic"	= can only be built by governments that allow them
;		  (see civ2/governments.ruleset, Fundamentalism government)
; "Unique"	= a player can only have one of these units in the game at
;		  the same time; barbarians cannot use this at present
; "GameLoss"	= losing one of these units means you lose the game, but it
;		  is produced without homecity and upkeep
; "Unbribable"	= this unit cannot be bribed
; "Undisbandable" = this unit cannot be disbanded, will not drown, and will not
;		  disband due to lack of shields to upkeep it in homecity;
;		  if not given enough food to upkeep it, homecity will shrink 
;		  every turn it cannot do so, however
; "SuperSpy"	= this unit always wins diplomatic contests, that is, unless
;		  it encounters another SuperSpy, in which case defender wins;
;		  can also be used on non-diplomat units, in which case it can
;		  protect cities from diplomats; also 100% spy survival chance
; "NoHome"	= this unit has no homecity and will be free of all upkeep, and
;		  therefore will not revolt along with its city of origin should
;		  it be incited
; "NoVeteran"   = this unit cannot gain veteran levels through experience
;                 (as if both raise_chance and work_raise_chance were zero);
;                 it can still gain veterancy through Veteran_Build, etc
; "Bombarder"   = this unit cannot kill other units, only damage them, but
;                 also is not harmed by return fire when attacking; the field
;                 bombard_rate regulates its number of shots
; "CityBuster"  = this unit has double firepower against cities
; "NoBuild"     = this unit cannot be built
; "BadWallAttacker"	= the firepower of this unit is set to 1 if
;                 attacking a city
;		  defended by a city wall (or other city building defense)
; "BadCityDefender"	= if attacked while in a city, firepower is set to 1
;		  and firepower of attacker is doubled (the Pearl Harbour
;                 rule)
; "BarbarianOnly" = only barbarians can build this unit
; "Shield2Gold" = Switch from shield upkeep to gold upkeep possible
; "Capturable"  = can be captured by units with "Capturer" flag
; "Capturer"    = can capture units with flag "Capturable" instead of
;                 fighting them
;
; Following flag strings require extra fields:
;  "Paratroopers"
;   paratroopers_range = the maximal range the unit can be paradropped to
;   paratroopers_mr_req = the move rate which is required at least for
;                         paradropping (whole movement points)
;   paratroopers_mr_sub = the move rate which is subtracted after paradropping
;                         (whole movement points)
;  "Bombarder"
;   bombard_rate = the number of shots fired at enemy units when attacking
;
; ** Roles **
;
; "FirstBuild"	= first to be built when city founded
; "Explorer"	= initial explorer unit (only one unit can have this flag)
; "Hut"		= can be found in a hut
; "HutTech"	= can be found in a hut, but its techs required
; "Partisan"	= can be created as a partisan (only one unit can have this 
;                 flag), see end of this file for its tech requirements option
; "DefendOk"	= AI hint: ok for defending with
; "DefendGood"	= AI hint: good for defending with
; "AttackFast"	= AI hint: quick attacking unit (unused)
; "AttackStrong"= AI hint: strong attacker (unused)
; "Ferryboat"	= AI hint: useful for ferrying
; "Barbarian"	       = can be created as land barbarian
; "BarbarianTech"      = can be created as land barbarian, if someone has
;		         researched its tech requirements
; "BarbarianBoat"      = can be created as boat for sea barbarian
; "BarbarianBuild"     = can be built by barbarians
; "BarbarianBuildTech" = can be built by barbarians if someone has
;		         researched its tech requirements
; "BarbarianLeader"    = this unit is the barbarian leader (only one)
; "BarbarianSea"       = can be created as a barbarian that disembarks from a barbarian boat
; "BarbarianSeaTech"   = can be created as a barbarian that disembarks from a barbarian boat
;                        if someone has researched its tech requirements
; "Cities"	= can disband to produce a city
; "Settlers"	= can irrigate and build roads
; "GameLoss"	= losing one of these units means you lose the game, but it
;		  is produced without homecity and upkeep
; "Diplomat"	= can do diplomat actions (see diplchance server option)
; "Hunter"      = AI hint: good for hunting other units
;
; */ <-- avoid gettext warnings

[unit_worker]
name          = _("?unit:Workers")
class         = "Land"
tech_req      = "Pottery"
obsolete_by   = "None"
graphic       = "u.worker"
graphic_alt   = "u.engineers" ; for compatibility
sound_move    = "m_worker"
sound_move_alt = "m_generic"
sound_fight   = "f_worker"
sound_fight_alt = "f_generic"
build_cost    = 30
pop_cost      = 0
attack        = 0
defense       = 1
hitpoints     = 10
firepower     = 1
move_rate     = 1
vision_radius_sq = 2
transport_cap = 0
fuel          = 0
uk_happy      = 0
uk_shield     = 1
uk_food       = 0
uk_gold       = 0
flags         = "Settlers", "NonMil", "Airbase"
veteran_names             =
; /* TRANS: Worker veteran level */
  _("?worker_level:apprentice"),
; /* TRANS: Worker veteran level */
  _("?worker_level:journeyman"),
; /* TRANS: Worker veteran level */
  _("?worker_level:master")
veteran_raise_chance      = 0, 0, 0
veteran_work_raise_chance = 2, 1, 0
veteran_power_fact        = 100, 125, 150
veteran_move_bonus        = 0, 0, 0
roles         = "Settlers"
helptext      = _("\
Workers have the ability to improve terrain tiles.\
"), _("\
Building an irrigation system on a suitable tile causes it to \
produce some extra food each turn. This requires a nearby source of \
water: an ocean, lake, or river tile, or another tile with an \
irrigation system, must share an edge (not just a corner) with the \
target tile. Once irrigated, land remains so even if the water source \
is removed. When Refrigeration is known, irrigation systems can be \
upgraded to Farmland by irrigating them a second time; this provides \
more food to a city if it has a Supermarket.\
"), _("\
Building a mine on suitable terrain increases the \
number of production points produced by that tile. However, it is not \
possible to have an irrigation system and a mine on the same tile.\
"), _("\
On terrain unsuitable for irrigation systems or mines, issuing the \
\"irrigate\" or \"mine\" order may permanently convert the terrain \
to another type; this is usually more expensive. For instance, Swamp \
may be \"irrigated\" to yield Grassland. (Terrain conversion with \
the \"irrigate\" order does not require a water source.)\
"), _("\
Workers can build airbases and buoys, which Settlers cannot. \
Workers must be on board a ship to build buoys.\
"), _("\
See the help on Terrain and Terrain Alterations for the effects of \
these actions.\
")

[unit_earldormen]
name          = _("Earldormen")
class         = "Land"
tech_req      = "None"
obsolete_by   = "None"
graphic       = "u.warriors"
graphic_alt   = "-"
sound_move    = "m_warriors"
sound_move_alt = "m_generic"
sound_fight   = "f_warriors"
sound_fight_alt = "f_generic"
build_cost    = 40
pop_cost      = 0
attack        = 3
defense       = 3
hitpoints     = 12
firepower     = 1
move_rate     = 1
vision_radius_sq = 2
transport_cap = 0
fuel          = 0
uk_happy      = 1
uk_shield     = 0
uk_food       = 0
uk_gold       = 2
flags         = "Unique"
roles         = "DefendGood", "FirstBuild"
helptext      = _("\
Saxon noblemen and their personal armies\
")

[unit_fyrdsmen]
name          = _("Fyrdsmen")
class         = "Land"
tech_req      = "None"
obsolete_by   = "None"
graphic       = "u.warriors"
graphic_alt   = "-"
sound_move    = "m_warriors"
sound_move_alt = "m_generic"
sound_fight   = "f_warriors"
sound_fight_alt = "f_generic"
build_cost    = 10
pop_cost      = 0
attack        = 1
defense       = 2
hitpoints     = 8
firepower     = 1
move_rate     = 1
vision_radius_sq = 2
transport_cap = 0
fuel          = 0
uk_happy      = 1
uk_shield     = 0
uk_food       = 1
uk_gold       = 0
flags         = ""
roles         = "DefendGood", "FirstBuild"
helptext      = _("\
Levied part time soldiers, part time farmers\
")

[unit_fyrdsmen_archers]
name          = _("Fyrdsmen Archers")
class         = "Land"
tech_req      = "Warrior Code"
obsolete_by   = "None"
graphic       = "u.archers"
graphic_alt   = "-"
sound_move    = "m_archers"
sound_move_alt = "m_generic"
sound_fight   = "f_archers"
sound_fight_alt = "f_generic"
build_cost    = 12
pop_cost      = 0
attack        = 2
defense       = 1
hitpoints     = 6
firepower     = 1
move_rate     = 1
vision_radius_sq = 2
transport_cap = 0
fuel          = 0
uk_happy      = 1
uk_shield     = 0
uk_food       = 1
uk_gold       = 0
flags         = ""
roles         = "DefendOk"
helptext      = _("\
Fyrdsmen armed with bows\
")

[unit_jarls]
name          = _("Jarls")
class         = "Land"
tech_req      = "None"
obsolete_by   = "None"
graphic       = "u.legion"
graphic_alt   = "-"
sound_move    = "m_legion"
sound_move_alt = "m_generic"
sound_fight   = "f_legion"
sound_fight_alt = "f_generic"
build_cost    = 50
pop_cost      = 0
attack        = 4
defense       = 2
hitpoints     = 12
firepower     = 1
move_rate     = 1
vision_radius_sq = 2
transport_cap = 0
fuel          = 0
uk_happy      = 1
uk_shield     = 0
uk_food       = 0
uk_gold       = 2
flags         = "Unique"
roles         = "DefendOk"
helptext      = _("\
Norse noblemen and their retinue\
")

[unit_viking_raiders]
name          = _("Viking Raiders")
class         = "Land"
tech_req      = "None"
obsolete_by   = "None"
graphic       = "u.legion"
graphic_alt   = "-"
sound_move    = "m_legion"
sound_move_alt = "m_generic"
sound_fight   = "f_legion"
sound_fight_alt = "f_generic"
build_cost    = 60
pop_cost      = 0
attack        = 2
defense       = 2
hitpoints     = 8
firepower     = 1
move_rate     = 1
vision_radius_sq = 2
transport_cap = 0
fuel          = 0
uk_happy      = 0
uk_shield     = 0
uk_food       = 0
uk_gold       = 0
flags         = "NoHome"
roles         = "DefendOk", "Hut", "BarbarianBuild", "BarbarianSea"
helptext      = _("\
Viking Raiders\
")

[unit_scout_cavalry]
name          = _("Scout Cavalry")
class         = "Land"
tech_req      = "Horseback Riding"
obsolete_by   = "None"
graphic       = "u.horsemen"
graphic_alt   = "-"
sound_move    = "m_horsemen"
sound_move_alt = "m_generic"
sound_fight   = "f_horsemen"
sound_fight_alt = "f_generic"
build_cost    = 20
pop_cost      = 0
attack        = 1
defense       = 1
hitpoints     = 8
firepower     = 1
move_rate     = 2
vision_radius_sq = 6
transport_cap = 0
fuel          = 0
uk_happy      = 1
uk_shield     = 1
uk_food       = 0
uk_gold       = 0
flags         = "Horse"
roles         = "AttackFast", "Hut", "Barbarian", "Hunter", "Explorer"
helptext      = _("\
Horsemen are mounted warriors and an early\
 shock-troop that can penetrate deep into\
 enemy territory.\
")

[unit_longship]
; /* TRANS: unit type */
name          = _("Longship")
class         = "Trireme"
tech_req      = "Map Making"
obsolete_by   = "None"
graphic       = "u.trireme"
graphic_alt   = "-"
sound_move    = "m_trireme"
sound_move_alt = "m_generic"
sound_fight   = "f_trireme"
sound_fight_alt = "f_generic"
build_cost    = 60
pop_cost      = 0
attack        = 1
defense       = 1
hitpoints     = 10
firepower     = 1
move_rate     = 3
vision_radius_sq = 2
transport_cap = 2
fuel          = 0
uk_happy      = 1
uk_shield     = 1
uk_food       = 0
uk_gold       = 0
cargo         = "Land"
flags         = "BadCityDefender"
roles         = "Ferryboat"
helptext      = _("\
 Shallow-bottomed Norse ship capable of travelling up rivers\
")

[unit_cog]
name          = _("Cog")
class         = "Sea"
tech_req      = "Navigation"
obsolete_by   = "None"
graphic       = "u.caravel"
graphic_alt   = "-"
sound_move    = "m_caravel"
sound_move_alt = "m_generic"
sound_fight   = "f_caravel"
sound_fight_alt = "f_generic"
build_cost    = 40
pop_cost      = 0
attack        = 1
defense       = 1
hitpoints     = 10
firepower     = 1
move_rate     = 2
vision_radius_sq = 2
transport_cap = 3
fuel          = 0
uk_happy      = 1
uk_shield     = 1
uk_food       = 0
uk_gold       = 0
cargo         = "Land"
flags         = "BadCityDefender"
roles         = "Ferryboat", "BarbarianBoat"
helptext      = _("\
Square-rigged ship based on the Norse Knarr that appeared during the 10th century.\
")

[unit_holk]
name          = _("Knarr")
class         = "Sea"
tech_req      = "Navigation"
obsolete_by   = "None"
graphic       = "u.caravel"
graphic_alt   = "-"
sound_move    = "m_caravel"
sound_move_alt = "m_generic"
sound_fight   = "f_caravel"
sound_fight_alt = "f_generic"
build_cost    = 40
pop_cost      = 0
attack        = 2
defense       = 1
hitpoints     = 10
firepower     = 1
move_rate     = 3
vision_radius_sq = 2
transport_cap = 3
fuel          = 0
uk_happy      = 1
uk_shield     = 1
uk_food       = 0
uk_gold       = 0
cargo         = "Land"
flags         = "BadCityDefender"
roles         = "Ferryboat", "BarbarianBoat"
helptext      = _("\
A Norse ship built for long sea voyages and used during the Viking expansion.\
")


[unit_diplomat]
name          = _("Diplomat")
class         = "Land"
tech_req      = "Writing"
obsolete_by   = "None"
graphic       = "u.diplomat"
graphic_alt   = "-"
sound_move    = "m_diplomat"
sound_move_alt = "m_generic"
sound_fight   = "f_diplomat"
sound_fight_alt = "f_generic"
build_cost    = 30
pop_cost      = 0
attack        = 0
defense       = 0
hitpoints     = 10
firepower     = 1
move_rate     = 2
vision_radius_sq = 2
transport_cap = 0
fuel          = 0
uk_happy      = 0
uk_shield     = 0
uk_food       = 0
uk_gold       = 0
flags         = "Diplomat", "IgZOC", "NonMil"
veteran_names =
; /* TRANS: diplomatic rank. */
; /* TRANS: Unless translated, the last character in "attache" should be */
; /* TRANS: U+00E9 LATIN SMALL LETTER E WITH ACUTE if available in your */
; /* TRANS: charset. In ISO-8859-1 (ISO Latin 1) this is 233. */
  _("?diplomatic_rank:attache"),
; /* TRANS: diplomatic rank */
  _("?diplomatic_rank:secretary"),
; /* TRANS: diplomatic rank */
  _("?diplomatic_rank:envoy"),
; /* TRANS: diplomatic rank */
  _("?diplomatic_rank:ambassador")
veteran_raise_chance = 50, 33, 20, 0
veteran_work_raise_chance = 0, 0, 0, 0
veteran_power_fact = 100, 105, 110, 115
veteran_move_bonus = 0, 0, 0, 0
roles         = "Diplomat"
helptext      = _("\
A Diplomat is an official that carries your dispatches and\
 is authorized to deal with foreign dignitaries. He may\
 also undertake various covert operations with the intent of\
 harming your opponents; Diplomats in your own cities defend\
 them against such actions.\
"), _("\
Many covert actions may be attempted even in peacetime, but the more\
 aggressive actions will be discovered and cause diplomatic incidents,\
 which can allow Republics and Democracies to break treaties.\
"), _("\
If a foreign unit is alone on a tile, you may attempt to bribe it\
 with your Diplomat. By paying a sum of gold the unit will immediately\
 become yours; the exact sum depends on the status of the unit and\
 that of the civilization owning it. However, units belonging to\
 Democratic governments cannot be bribed. Bribery when not at war\
 will cause a diplomatic incident.\
"), _("\
Diplomats can also perform a number of actions in another player's\
 city, although each Diplomat may attempt only one action. Most of\
 these actions have a chance of failure. Also, any enemy Diplomats or\
 Spies in the city will oppose hostile actions; in this case, either\
 your unit or the defending unit will die. If the defending unit dies,\
 you lose one movement point and may try again.\
"), _("\
The actions available to Diplomats in a city are:\
"), _("\
 - \"Establish Embassy\": This action always succeeds, and gives\
 permanent contact with the city's owner, as well as intelligence\
 on their tax rates and technology.\
"), _("\
 - \"Investigate City\": Your unit attempts to report detailed\
 information about the city: its status, what buildings and units are\
 within, and what it is currently producing.\
"), _("\
 - \"Sabotage City\": Your unit attempts either to disrupt all the\
 city's work so far towards its current project, or to destroy an\
 existing building in the city, at random. Once built, Palaces and\
 Wonders cannot be sabotaged, and attempts to sabotage City Walls\
 or any building in a capital each halve the chance of success.\
 Sabotage may only be attempted when openly at war.\
"), _("\
 - \"Steal Technology\": Your unit attempts to learn the secrets of a\
 random technology known to the city's owner but not to you. Technology\
 may only be stolen once from a given enemy city by Diplomats. This\
 action may be attempted even when not at war, but will cause a\
 diplomatic incident.\
"), _("\
 - \"Incite a Revolt\": In return for gold a foreign city will change\
 allegiance and join your empire, bringing along all nearby units that\
 call it home, but reducing its size by 1. Units in other cities\
 remain in the enemy's control, but units outside cities are lost to\
 both players. The exact sum depends on the status of the city and\
 that of the civilization that owns it. It is not possible to incite\
 a rebellion in a capital, or in any city governed by a democracy.\
 Incitement may be attempted in peacetime, but will cause a\
 diplomatic incident.\
"), _("\
In some game strategies, hordes of Diplomats can be used to wreak\
 havoc on the enemy.  Little wonder that Diplomats are often\
 viewed with suspicion and fear!\
"), _("\
Diplomats built under a Communist government will start at the first\
 veteran level (secretary).\
")

[unit_caravan]
name          = _("Caravan")
class         = "Land"
tech_req      = "Trade"
obsolete_by   = "None"
graphic       = "u.caravan"
graphic_alt   = "-"
sound_move    = "m_caravan"
sound_move_alt = "m_generic"
sound_fight   = "f_caravan"
sound_fight_alt = "f_generic"
build_cost    = 50
pop_cost      = 0
attack        = 0
defense       = 1
hitpoints     = 10
firepower     = 1
move_rate     = 1
vision_radius_sq = 2
transport_cap = 0
fuel          = 0
uk_happy      = 0
uk_shield     = 0
uk_food       = 0
uk_gold       = 0
flags         = "TradeRoute", "HelpWonder", "IgZOC", "NonMil"
roles         = ""
helptext      = _("\
A Caravan carries goods or material for trading with distant cities\
 and foreign countries, or to help build wonders in your cities.\
"), _("\
Caravans can establish trade routes with your own cities or those of other\
 nations (even enemies) by traveling to them. A route's ongoing revenue\
 is doubled if the two cities involved are on different continents, and\
 doubled again if the cities are from different civilizations. This last\
 condition means the net benefit to your civilization of a trade route\
 is the same regardless of whether you own both cities or only one of\
 them; if you only own one city, trade in each city is doubled, but you\
 only get the benefit from one end of the route.\
"), _("\
Initially cities can support a maximum of two trade routes. Knowledge of\
 the technologies Magnetism and The Corporation each increase this limit\
 by one; knowing both allows cities to support four trade routes each.\
"), _("\
Every Caravan that is used to build a wonder will add 50 shields\
 towards the production of the wonder.\
"), _("\
TIP:  You can stockpile a stack of Caravans in advance and bring\
 them all into a city where you have started to build a wonder,\
 and finish it in only one turn!\
")

[unit_leader]
name          = _("?unit:Leader")
class         = "Land"
tech_req      = "None"
obsolete_by   = "None"
graphic       = "u.leader"
graphic_alt   = "u.explorer"
sound_move    = "m_leader"
sound_move_alt = "m_generic"
sound_fight   = "f_leader"
sound_fight_alt = "f_generic"
build_cost    = 10
pop_cost      = 0
attack        = 0
defense       = 2
hitpoints     = 20
firepower     = 1
move_rate     = 2
vision_radius_sq = 8
transport_cap = 0
fuel          = 0
uk_happy      = 0
uk_shield     = 0
uk_food       = 0
uk_gold       = 0
flags         = "IgZOC", "NonMil", "NoBuild", "NoHome", "SuperSpy", 
                "Undisbandable", "Unbribable", "GameLoss", "Unique"
; No veteran levels (level name is never displayed)
veteran_names = _("green")
veteran_raise_chance = 0
veteran_work_raise_chance = 0
veteran_power_fact = 100
veteran_move_bonus = 0
roles         = "GameLoss"
helptext      = _("\
This is you. If you lose this unit, you lose the game. So don't.\
")

[unit_barbarian_leader]
name          = _("Barbarian Leader")
class         = "Land"
tech_req      = "None"
obsolete_by   = "None"
graphic       = "u.barbarian_leader"
graphic_alt   = "u.diplomat"
sound_move    = "m_barbarian_leader"
sound_move_alt = "m_generic"
sound_fight   = "f_barbarian_leader"
sound_fight_alt = "f_generic"
build_cost    = 40
pop_cost      = 0
attack        = 0
defense       = 0
hitpoints     = 10
firepower     = 1
move_rate     = 2
vision_radius_sq = 2
transport_cap = 0
fuel          = 0
uk_happy      = 0
uk_shield     = 0
uk_food       = 0
uk_gold       = 0
flags         = "IgZOC", "NonMil", "Unbribable",
                "Undisbandable", "SuperSpy", "NoHome", "NoBuild"
; No veteran levels (level name is never displayed)
veteran_names = _("green")
veteran_raise_chance = 0
veteran_work_raise_chance = 0
veteran_power_fact = 100
veteran_move_bonus = 0
roles         = "BarbarianLeader"
helptext      = _("\
One Barbarian Leader appears every time there is a barbarian uprising\
 somewhere in the world.\
"), _("\
When a Barbarian Leader is killed on a tile without any defending units,\
 the 100 gold ransom is paid, but only to land units and helicopters.\
")

