================
Freeciv for BeOS
================
Last updated:  2000-08-06

Just a quick note for all you BeOS folks looking forward to your own Freeciv.
You will need to use BONE when it becomes available, which has BSD-style
sockets:  recent changes have shifted connection handling over to a fully
BSD-ish socket handling paradigm, which pre-BONE BeOS version cannot support.
(Most notably, the BSD convention that a socket is a file descriptor.)


------
Server 
------

Use `./configure --enable-server`.  It appears to execute cleanly (on X86),
though whether it can actually host a game has not been verified.  


------
Client
------

The initial client groundwork is being laid.  At least at first, it will be 
painfully apparent that this is a work in progress -- not launching on
double-click, unresponsive UI elements, and other subtle ;-) clues.
Start from a Terminal command line (see 'civ' for example).

You will need to download and install the following software separately:
http://bebits.bebits.com/app/1326 -- XPM Translator

For those who want to live dangerously, compile it straight.
You will need the latest R4.5 GeekGadgets.  Note that if you use 'autoconf'
on the sources, there's a bug in its version from GNU.  To work around it,
change lines 476 and 477 of freeciv's aclocal.m4 to remove the third arguments
to AC_DEFINE_UNQUOTED.  Otherwise, you'll get an integer one where a string
is supposed to be, and compiles will bomb out.
========
./configure --enable-client=beos
make 
cd client/gui-beos ; make all
cd .. ; make
cd gui-beos ; make Freeciv
========
Note the extra fiddling required.  The first will bomb out in client/ needing
gui-beos/libguiclient.a.  The second creates it.  The third completes building.
This will be folded back into the configuration and make-structure later.
You can use "civ" in place of "make Freeciv" to finish the construction and
invoke the client for testing.

For the rest of you, hang around for a zipfile from a developer, or someone
else who lives dangerously. :-)

Keep that upper lip stiff, though.  Testers are needed to try out even the
most rudimentary progress, and to catch the inevitable slipups in gameplay.
The first client release will not occur before 1.11.0.


------------
Contributing
------------

The original coordinator was Joseph Beckenbach <jrb3@bdhsw.com>;
a serious attack of life meant that he's had to pass the mantle on.
You can contact him with questions, but don't expect in-depth replies.

Once the initial groundwork is laid, a call should be made for other developers
to dive in and help speed up the work of creating and polishing the client and
server.  Be aware that this is of necessity an interesting mix of C and C++.
There's a whole lotta message-passing going on between Backend and the other
threads, so that all the backend stuff happens in the Backend thread, and all
the frontend stuff happens in frontend threads.  See connectdlg.* for an
example of how the client bridges the gap between C triggers and C++ functions.

Testers are welcome at any stage.


Coordinator				Joseph Beckenbach		jrb3@bdhsw.com


