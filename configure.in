dnl configure.in for freeciv
dnl Process this file with autoconf to produce a configure script.

dnl Initialize with some random file to ensure the source is here.
AC_INIT(common/game.c)
AM_CONFIG_HEADER(config.h)

dnl May not be quite correct, but autoconf version 2.9 is reported 
dnl not to work, and version 2.12 is known to work:
AC_PREREQ(2.12)

PACKAGE=freeciv

dnl client/server should always have the same major and minor versions
dnl different patch versions are compatible
MAJOR_VERSION=1
MINOR_VERSION=11
PATCH_VERSION=5
VERSION_LABEL="-devel"
IS_DEVEL_VERSION=1
IS_BETA_VERSION=0

VERSION=${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}${VERSION_LABEL}

dnl Similar to following are already done by AM_INIT_AUTOMAKE:
dnl (but different in terms of producing quoted vs bare strings)
dnl  AC_DEFINE_UNQUOTED(PACKAGE, $PACKAGE)
dnl  AC_DEFINE_UNQUOTED(VERSION, $VERSION)
dnl  AC_SUBST(VERSION)

AC_DEFINE_UNQUOTED(MAJOR_VERSION, $MAJOR_VERSION)
AC_DEFINE_UNQUOTED(MINOR_VERSION, $MINOR_VERSION)
AC_DEFINE_UNQUOTED(PATCH_VERSION, $PATCH_VERSION)
AC_DEFINE_UNQUOTED(VERSION_LABEL, "${VERSION_LABEL}")
AC_DEFINE_UNQUOTED(VERSION_STRING, "${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}${VERSION_LABEL}")
AC_DEFINE_UNQUOTED(IS_DEVEL_VERSION, $IS_DEVEL_VERSION)
AC_DEFINE_UNQUOTED(IS_BETA_VERSION, $IS_BETA_VERSION)

dnl Initialize automake stuff
AM_INIT_AUTOMAKE($PACKAGE, $VERSION)

AM_MAINTAINER_MODE

dnl Evaluate options. Example:
AC_ARG_ENABLE(debug,
 	[  --enable-debug[=no/minimum/yes] 
 	                  turn on debugging [default=minimum]],,
	enable_debug=minimum
)

if test "x$enable_debug" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -g"
  CPPFLAGS="$CPPFLAGS -DDEBUG"
else
  if test "x$enable_debug" = "xno"; then
    CPPFLAGS="$CPPFLAGS -DNDEBUG"
  fi
fi

dnl  no=do not compile server,  yes=compile server,  *=error
AC_ARG_ENABLE(server,
[  --disable-server        do not compile the server],
[case "${enableval}" in
  yes) server=true ;;
  no)  server=false ;;
  *)   AC_MSG_ERROR(bad value ${enableval} for --disable-server) ;;
esac], [server=true])
AM_CONDITIONAL(SERVER, test x$server = xtrue)

AC_ARG_WITH(readline,
[  --with-readline         support fancy command line editing],
WITH_READLINE=$withval,	dnl yes/no - required to use / never use
WITH_READLINE="maybe"	dnl maybe  - use if found [default]
)

dnl  no=do not compile client,  yes=guess it,  *=use this client or error
AC_ARG_ENABLE(client,
[  --enable-client[=no/yes/type]
                          compile a client [default=yes] (if yes, guess type)],
[case "${enableval}" in
  yes)	  client=yes ;;
  no)	  client=no ;;
  xaw3d)  client=xaw
	  WITH_XAW3D=1 ;;
  *)	  client="${enableval}"
	  if test ! -d "${srcdir}/client/gui-$client" ; then
	    AC_MSG_ERROR(bad value ${enableval} for --enable-client)
	  fi ;;
esac], [client=yes])
AM_CONDITIONAL(CLIENT, test x$client != xno)

AC_ARG_WITH(xaw,
[  --with-xaw              use the Xaw widget set for the xaw client],
WITH_XAW=1
)

AC_ARG_WITH(xaw3d,
[  --with-xaw3d            use the Xaw3d widget set for the xaw client],
WITH_XAW3D=1
)

dnl no=do not use, do not even look
dnl yes=do use, and fail to configure if not found
dnl maybe=use if found
AC_ARG_WITH(zlib,
[  --with-zlib             use zlib to (un)compress savegames transparently],
WITH_ZLIB=$withval,
WITH_ZLIB="maybe"
)

AC_ARG_ENABLE(make_data,
[  --disable-make-data     do not recurse make into data directories
                          (ok to disable unless you will 'make install')],
[case "${enableval}" in
  yes) make_data=true ;;
  no)  make_data=false ;;
  *)   AC_MSG_ERROR(bad value ${enableval} for --disable-make-data) ;;
esac], [make_data=true])
AM_CONDITIONAL(MAKE_DATA, test x$make_data = xtrue)

AC_ARG_ENABLE(make_include,
[  --enable-make-include   force make to recurse into include directory
                          (useful for 'make tags')],
[case "${enableval}" in
  yes) make_include=true ;;
  no)  make_include=false ;;
  *)   AC_MSG_ERROR(bad value ${enableval} for --enable-make-include) ;;
esac], [make_include=false])
AM_CONDITIONAL(MAKE_CLIENT_INCLUDE, test "$make_include" = "true")

AC_ARG_ENABLE(cvs_deps,
 	[  --disable-cvs-deps      remove cvs-source deps calcs, which require gmake,gcc],,
	enable_cvs_deps="maybe"
)
CVS_DEPS=$enable_cvs_deps
AC_SUBST(CVS_DEPS)

AC_ARG_WITH(efence,
	[  --with-efence           use Electric Fence, malloc debugger ],
	WITH_EFENCE=1
)

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_LN_S
AC_PROG_RANLIB

AC_ARG_PROGRAM

AC_CHECK_PROG(UNAME,uname,uname,:)

dnl Programs already checked by AM_INIT_AUTOMAKE:
dnl  AC_PROG_MAKE_SET

dnl I18n support
ALL_LINGUAS="de en_GB es fr hu ja nl no pl pt pt_BR ru sv"
AM_GNU_GETTEXT

dnl Why doesn't AM_GNU_GETTEXT set LIBS appropriately 
dnl when -lintl is required??
if test "$gt_cv_func_gettext_libintl" = "yes"; then
    LIBS="-lintl  $LIBS"
fi

dnl DATADIRNAME is generated by AM_GNU_GETTEXT; 
dnl note this has to match the path installed by po/Makefile
FC_EXPAND_DIR(LOCALEDIR, '${prefix}/${DATADIRNAME}/locale')
AC_DEFINE_UNQUOTED(LOCALEDIR, "$LOCALEDIR")

if test -n "$GCC"; then
   CFLAGS="$CFLAGS -Wall"
fi

if test "$CVS_DEPS" = "maybe"; then
   dnl Should also check for gmake?
   if test -n "$GCC"; then
      CVS_DEPS="yes"
   else
      CVS_DEPS="no"
   fi
fi

dnl BeOS-specific settings
if test x`$UNAME -s` = xBeOS ; then
  AC_DEFINE(SOCKET_ZERO_ISNT_STDIN)
  CFLAGS="$CFLAGS -Wno-multichar"
  LDFLAGS="$LDFLAGS -x none"
  if test x$enable_debug = xyes ; then
    CFLAGS="$CFLAGS -gdwarf-2"
    LDFLAGS="$LDFLAGS -gdwarf-2"
  fi
  ARFLAGS=${ARFLAGS:-cru}
  AC_SUBST(ARFLAGS)
fi

dnl Windows-specific settings
AC_MINGW32
if test x"$MINGW32" = "xyes"; then
  AC_DEFINE(SOCKET_ZERO_ISNT_STDIN)
  AC_DEFINE(ALWAYS_ROOT)
  AC_DEFINE(WIN32_NATIVE)
  AC_DEFINE(HAVE_WINSOCK)
  SERVER_LIBS="-lwsock32"
  CFLAGS="$CFLAGS -fnative-struct"
fi

dnl Check and choose clients
if test x$client != xno; then

  dnl if specified --with-xaw or --with-xaw3d, assume --enable-client=xaw
  if test x$client = xyes; then
    if test -n "$WITH_XAW" || test -n "$WITH_XAW3D"; then
      client=xaw
    fi
  fi

  dnl if need to guess client, announce checking
  if test x$client = xyes; then
    AC_CHECKING([for which client to compile:])
  fi

  dnl Gtk-specific overrides
  if test "$client" = gtk || test "$client" = yes ; then
    AM_PATH_GTK(1.2.1, gtk_found="yes", gtk_found="", imlib_found="")
    if test "x$gtk_found" = "xyes"; then
      AM_PATH_GDK_IMLIB(1.9.2, imlib_found="yes", imlib_found="")
      if test "x$imlib_found" = "xyes"; then
        CLIENT_CFLAGS="$GDK_IMLIB_CFLAGS"
        CLIENT_LIBS="$GDK_IMLIB_LIBS"
	found_client=yes
      fi
    fi

    if test "x$found_client" = "xyes"; then
      client=gtk
    elif test "$client" = "gtk"; then
      AC_MSG_ERROR(specified client 'gtk' not configurable)
    fi
  fi

  dnl Xaw-specific overrides
  if test "$client" = xaw || test "$client" = yes ; then
    dnl Checks for X:
    AC_PATH_XTRA

    dnl Determine the Xfuncproto control definitions:
    FC_CHECK_X_PROTO_DEFINE(FUNCPROTO)
    if test -n "$fc_x_proto_value"; then
      AC_DEFINE_UNQUOTED(FUNCPROTO, $fc_x_proto_value)
    fi
    FC_CHECK_X_PROTO_DEFINE(NARROWPROTO)
    if test -n "$fc_x_proto_value"; then
      AC_DEFINE_UNQUOTED(NARROWPROTO, $fc_x_proto_value)
    fi

    dnl Try to get additional Xpm paths:
    FC_XPM_PATHS

    if test "$xpm_incdir" != "no"; then
      X_CFLAGS="$X_CFLAGS -I$xpm_incdir"
    fi
    if test "$xpm_libdir" != "no"; then
      X_LIBS="$X_LIBS -L$xpm_libdir"
      dnl Try using R values set in AC_PATH_XTRA:
      if test "$ac_R_nospace" = "yes"; then
        X_LIBS="$X_LIBS -R$xpm_libdir"
      elif test "$ac_R_space" = "yes"; then
        X_LIBS="$X_LIBS -R $xpm_libdir"
      fi
      dnl Some sites may put xpm.h in a directory whose parent isn't "X11"
      if test "x$xpm_h_no_x11" = "xyes"; then
        AC_DEFINE(XPM_H_NO_X11)
      fi
    fi

    dnl Checks for X libs:
    fc_save_X_LIBS="$X_LIBS"
    X_LIBS="$X_LIBS $X_PRE_LIBS"
    FC_CHECK_X_LIB(X11, XOpenDisplay, , haveX11=no)
    if test "x$haveX11" != "xno"; then
      FC_CHECK_X_LIB(Xext, XShapeCombineMask)

      dnl Insert X_PRE_LIBS (eg -lSM -lICE) into X_EXTRA_LIBS here:
      X_EXTRA_LIBS="$X_PRE_LIBS $X_EXTRA_LIBS"
      X_LIBS="$fc_save_X_LIBS"

      FC_CHECK_X_LIB(Xt, main)
      FC_CHECK_X_LIB(Xmu, main)
      FC_CHECK_X_LIB(Xpm, XpmReadFileToPixmap, , haveXpm=no)
      if test "x$haveXpm" != "xno"; then
	dnl Xaw or Xaw3d:
	if test -n "$WITH_XAW3D"; then
	  FC_CHECK_X_LIB(Xaw3d, main, , AC_MSG_ERROR(did not find Xaw3d library))
	elif test "$client" = "xaw"; then
	  FC_CHECK_X_LIB(Xaw, main, , AC_MSG_ERROR(did not find Xaw library))
	else
	  FC_CHECK_X_LIB(Xaw3d, main, , noXaw3d=1)
	  if test -n "$noXaw3d"; then
	    FC_CHECK_X_LIB(Xaw, main, ,
	      AC_MSG_ERROR(did not find either Xaw or Xaw3d library))
	  fi
	fi

	CLIENT_CFLAGS="$X_CFLAGS"
	CLIENT_LIBS="$X_LIBS $X_EXTRA_LIBS"

	found_client=yes
      fi
    fi

    if test "x$found_client" = "xyes"; then
      client=xaw
    elif test "$client" = "xaw"; then
      if test "x$haveXpm" = "xno"; then
	AC_MSG_ERROR(specified client 'xaw' not configurable -- need Xpm library and development headers; perhaps try/adjust --with-xpm-lib)
      else
	AC_MSG_ERROR(specified client 'xaw' not configurable -- need X11 libraries and development headers; perhaps try/adjust --x-libraries)
      fi
    fi
  fi

  dnl BeOS-specific overrides
  if test "$client" = beos || test "$client" = yes ; then
    if test x`$UNAME -s` = xBeOS ; then
      CLIENT_CFLAGS=
      CLIENT_LIBS="-Lgui-beos/lib -lBdhGame -lBdhDialog -lBdh -ltranslation -lbe -lroot"
      found_client=yes
    fi

    if test "x$found_client" = "xyes"; then
      client=beos
    elif test "$client" = "beos"; then
      AC_MSG_ERROR(specified client 'beos' not configurable)
    fi
  fi

  dnl Win32-specific overrides
  if test "$client" = win32 || test "$client" = yes ; then
    # ADD WIN32 TEST HERE

    if test "x$found_client" = "xyes"; then
      client=win32
    elif test "$client" = "win32"; then
      AC_MSG_ERROR(specified client 'win32' not configurable)
    fi
  fi

  dnl Stub-specific overrides
  if test "$client" = stub ; then
    found_client=yes

    if test "x$found_client" = "xyes"; then
      client=stub
    elif test "$client" = "stub"; then
      AC_MSG_ERROR(specified client 'stub' not configurable)
    fi
  fi

  dnl If client still "yes", error out since we couldn't guess it
  if test "$client" = yes ; then
    AC_MSG_ERROR(could not guess which client to compile)
  fi

  gui_sources="gui-$client"
fi
AC_SUBST(gui_sources)
AC_SUBST(CLIENT_CFLAGS)
AC_SUBST(CLIENT_LIBS)
AM_CONDITIONAL(CLIENT_GUI_GTK, test "$gui_sources" = "gui-gtk")
AM_CONDITIONAL(CLIENT_GUI_XAW, test "$gui_sources" = "gui-xaw")
AM_CONDITIONAL(CLIENT_GUI_BEOS, test "$gui_sources" = "gui-beos")
AM_CONDITIONAL(CLIENT_GUI_STUB, test "$gui_sources" = "gui-stub")
AM_CONDITIONAL(CLIENT_GUI_WIN32, test "$gui_sources" = "gui-win32")

dnl Checks for additional server libraries:
if test x$server = xtrue; then
    dnl The use of AC_CHECK_FUNC is to avoid wrong libs on IRIX.
    AC_CHECK_FUNC(gethostbyname)
    if test $ac_cv_func_gethostbyname = no; then
        AC_CHECK_LIB(nsl, gethostbyname, SERVER_LIBS="-lnsl $SERVER_LIBS")
    fi
    AC_CHECK_FUNC(connect)
    if test $ac_cv_func_connect = no; then
        AC_CHECK_LIB(socket, connect, SERVER_LIBS="-lsocket $SERVER_LIBS")
    fi
    dnl looking for readline library and header
    if test "$WITH_READLINE" = "yes"; then
	AC_CHECK_LIB(readline, rl_completion_matches, 
	    [SERVER_LIBS="-lreadline $SERVER_LIBS"
	     AC_DEFINE_UNQUOTED(HAVE_LIBREADLINE)],
	    AC_MSG_ERROR([Specified --with-readline but did not find library.]),
	    $SERVER_LIBS)
	AC_CHECK_HEADER(readline/readline.h, ,
	AC_MSG_ERROR([Specified --with-readline; found library but not header file.
You may need to install a readline \"development\" package.]))
    elif test "$WITH_READLINE" = "maybe"; then
	AC_CHECK_HEADER(readline/readline.h, have_readline_h=1, have_readline_h=0)
	if test "$have_readline_h" = "1"; then
	    AC_CHECK_LIB(readline, rl_completion_matches, 
                         have_readline_lib=1, have_readline_lib=0)
	    if test "$have_readline_lib" = "1"; then
                FC_CHECK_READLINE_RUNTIME($SERVER_LIBS,
	              [SERVER_LIBS="-lreadline $SERVER_LIBS"])
	    fi
	fi
    fi
fi
AC_SUBST(SERVER_LIBS)

AC_CHECK_LIB(nls,main)

dnl Include CLIENT_LIBS in zlib tests below because some X11R4 installations
dnl contain their own libz which may be too old a version to have gzgets().
if test "$WITH_ZLIB" = "yes"; then
    AC_CHECK_LIB(z, gzgets, , 
        AC_MSG_ERROR([Specified --with-zlib but did not find zlib library.]), 
        $CLIENT_LIBS)
    AC_CHECK_HEADER(zlib.h, , 
        AC_MSG_ERROR([Specified --with-zlib; zlib found but not zlib.h.  
You may need to install a zlib \"development\" package.]))

elif test "$WITH_ZLIB" = "maybe"; then
    AC_CHECK_HEADER(zlib.h, have_zlib_h=1, have_zlib_h=0)
    if test "$have_zlib_h" = "1"; then
        AC_CHECK_LIB(z, gzgets, , , $CLIENT_LIBS)
    fi
fi

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h sys/time.h sys/types.h unistd.h)
dnl Avoid including the unix emulation layer if we build mingw executables
dnl There would be type conflicts between winsock and bsd/unix includes
if test "x$MINGW32" != "xyes"; then
  AC_CHECK_HEADERS(arpa/inet.h netdb.h netinet/in.h pwd.h sys/ioctl.h \
                   sys/select.h sys/signal.h sys/socket.h sys/termio.h \
                   sys/uio.h termios.h)
fi
if test x$client = xxaw; then
  dnl Want to get appropriate -I flags:
  fc_save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS $CLIENT_CFLAGS"
  AC_CHECK_HEADER(X11/xpm.h, , 
    AC_MSG_ERROR(need X11/xpm.h header; perhaps try/adjust --with-xpm-include))
  CPPFLAGS="$fc_save_CPPFLAGS"
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_STRCOLL
AC_FUNC_VPRINTF

AC_CHECK_FUNCS(fileno gethostname getpwuid gettimeofday inet_aton \
               select snooze strerror strcasecmp strncasecmp \
               strlcat strlcpy strstr usleep vsnprintf)

dnl Windows fdopen does not work with sockets.
if test "x$MINGW32" != "xyes"; then
  AC_CHECK_FUNCS(fdopen)
fi

dnl We would AC_CHECK_FUNCS for socket as well, except it is complicated
dnl by the fact that the -lsocket is in X_EXTRA_LIBS and/or SERVER_LIBS,
dnl and not in LIBS.

dnl Now check if non blocking sockets are possible
dnl (if fcntl or ioctl exists)

AC_CHECK_FUNC(fcntl,
              [AC_DEFINE(HAVE_FCNTL)
               AC_DEFINE(NONBLOCKING_SOCKETS)],
               AC_CHECK_FUNC(ioctl, 
                             [AC_DEFINE(HAVE_IOCTL)
                              AC_DEFINE(NONBLOCKING_SOCKETS)]))

dnl Checks if SIGPIPE is usable
AC_MSG_CHECKING([for SIGPIPE])
AC_TRY_COMPILE([#include <signal.h>],[signal (SIGPIPE, SIG_IGN)],
               [AC_MSG_RESULT([yes])
                AC_DEFINE(HAVE_SIGPIPE)],
               [AC_MSG_RESULT([no])])

dnl export where the datadir is going to be installed
FC_EXPAND_DIR(FREECIV_DATADIR, "$datadir/freeciv")
AC_DEFINE_UNQUOTED(DEFAULT_DATA_PATH, ".:data:~/.freeciv:$FREECIV_DATADIR")

dnl This has to be last library
if test -n "$WITH_EFENCE"; then
  AC_CHECK_LIB(efence, malloc, [ 
  if test "x$LIBS" = "x"; then
    LIBS = -lefence
  else
    LIBS="$LIBS -lefence"
  fi])
fi

dnl Freeciv uses a non-standard macro, Q_(), to handle cases of qualified
dnl translatable strings.  Since the Gettext supplied Autoconf support
dnl doesn't seem to have a way to add new keywords to its xgettext call,
dnl we do the following.
dnl The Gettext supplied Autoconf support starts with 'po/Makefile.in.in',
dnl and builds 'po/Makefile.in' then 'po/Makefile'.  In order for the
dnl commonly used _() and N_() macros to work, there should be somewhere
dnl in that 'po/Makefile' a call to xgettext with "--keyword=_" and
dnl "--keyword=N_" as arguments.  To support Q_(), the following simply
dnl replaces instances of "--keyword=N_" with "--keyword=N_ --keyword=Q_"
dnl in the 'po/Makefile' file.
AC_OUTPUT_COMMANDS(
  [if test -f po/Makefile ; then
     if grep 'keyword=N_ --keyword=Q_' po/Makefile >/dev/null 2>&1 ; then
       # has already been extended
       :
     else
       echo extending po/Makefile
       mv -f po/Makefile po/Makefile.tmp
       sed -e 's/--keyword=N_/--keyword=N_ --keyword=Q_/g' po/Makefile.tmp > po/Makefile
       rm po/Makefile.tmp
     fi
   fi])

dnl Vast quantities of meaningless errors from xgettext is also annoying.
dnl We fix this by forcing xgettext to assume all files are C source files.
AC_OUTPUT_COMMANDS(
  [if test -f po/Makefile ; then
     if grep 'language=C --files-from=\$(srcdir)/POTFILES.in' po/Makefile >/dev/null 2>&1 ; then
       # has already been silenced
       :
     else
       echo silencing po/Makefile
       mv -f po/Makefile po/Makefile.tmp
       sed -e 's/--files-from=$(srcdir)\/POTFILES.in/--language=C --files-from=$(srcdir)\/POTFILES.in/' po/Makefile.tmp > po/Makefile
       rm po/Makefile.tmp
     fi
   fi])

dnl The default behavior of msgmerge breaks 2-byte character
dnl encodings, as used in ja.po and others.
dnl We fix this by forcing the "-w 0" option on all msgmerge calls.
AC_OUTPUT_COMMANDS(
  [if test -f po/Makefile ; then
     if grep 'MSGMERGE = PATH=../src:$$PATH msgmerge -w 0' po/Makefile >/dev/null 2>&1 ; then
       # has already been modified
       :
     else
       echo modifying po/Makefile msgmerge
       mv -f po/Makefile po/Makefile.tmp
       sed -e 's/MSGMERGE = PATH=..\/src:$$PATH msgmerge/MSGMERGE = PATH=..\/src:$$PATH msgmerge -w 0/' po/Makefile.tmp > po/Makefile
       rm po/Makefile.tmp
     fi
   fi])

dnl Most of the C comments copied to freeciv.pot are spurious; 
dnl change to only copy those with prefix "TRANS:"
dnl Also add --escape to the arguments to convert extended
dnl characters to escape characters.  This affects some of the 
dnl gui-mui strings, which use 0x1B escape character.
AC_OUTPUT_COMMANDS(
  [if test -f po/Makefile ; then
     if grep 'add-comments="TRANS:" --escape' po/Makefile >/dev/null 2>&1 ; then
       # has already been modified
       :
     else
       echo modifying po/Makefile add-comments/escape
       mv -f po/Makefile po/Makefile.tmp
       sed -e 's/add-comments/add-comments="TRANS:" --escape/' po/Makefile.tmp > po/Makefile
       rm po/Makefile.tmp
     fi
   fi])

dnl The BeOS sys/uio.h is broken.  This kluges it out of existence.
dnl (This still causes lots of spurious changes to config.h on BeOS.)
AC_OUTPUT_COMMANDS(
  [if test x`uname -s` = xBeOS ; then
     if grep '#define HAVE_SYS_UIO_H 1' config.h >/dev/null 2>&1 ; then
       echo kluging config.h 
       mv -f config.h config.h.tmp
       sed -e 's/#define HAVE_SYS_UIO_H 1/#undef HAVE_SYS_UIO_H/g' config.h.tmp > config.h
       rm config.h.tmp
     fi
   fi])


AC_OUTPUT(Makefile
          data/Makefile 
	  data/misc/Makefile 
	  data/trident/Makefile 
	  data/engels/Makefile 
	  data/hires/Makefile 
	  data/default/Makefile 
	  data/classic/Makefile 
	  data/civ1/Makefile 
	  data/civ2/Makefile 
	  data/scenario/Makefile 
	  data/nation/Makefile 
	  common/Makefile 
	  ai/Makefile 
	  client/Makefile 
	  client/include/Makefile 
	  client/gui-gtk/Makefile 
	  client/gui-xaw/Makefile 
	  client/gui-win32/Makefile 
	  client/gui-stub/Makefile 
	  server/Makefile 
	  intl/Makefile
	  vms/Makefile
	  po/Makefile.in
	  doc/Makefile
	  undep.sh, [ chmod +x undep.sh ; ./undep.sh ])
