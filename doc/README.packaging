----------------------------------------------------------------------
                   Notes for Freeciv packagers
----------------------------------------------------------------------

This file is meant to help those people wanting to package Freeciv
for their distribution, and, to some degree, those people who want to
create Freeciv fork.

----------------------------------------------------------------------
Updating from 2.3 to 2.4
------------------------
* Client uses ~/.freeciv-client-rc-2.4 for storing its options.
  Options are always saved to that file.
  Loading of options first tries to get options from
  ~/.freeciv-client-rc-2.4. If that file does not exist it tries to
  load options from old client files generated by former version of Freeciv
  (e.g. ~/.freeciv-client-rc-2.3 generated by Freeciv 2.3 or ~/.civclientrc
   generated by Freeciv version <= 2.1).
* There is new savegame compression method xz
* Support for loadable AI modules optionally built in
* Development of new qt-client started. It can be built with --enable-client=qt
* libcurl is new dependency
* ftwl-client has been removed from distribution
* freeciv-modpack is built either as gtk3-program, or as gtk2-program.
  See --enable-fcmp
* System lua can be used instead of one that comes with freeciv. See
  --enable-sys-lua
* Added text field "distribution" to client_info packet. Packagers should
  set FREECIV_DISTRIBUTOR in fc_version if they modify freeciv at all.

----------------------------------------------------------------------
Compatibility of modified versions
----------------------------------
If you create patched version of Freeciv, take necessary precautions
to avoid problems when your patched version interacts with unpatched
version, or tries to load or save incompatible data files.

Concept called "capabilities" is widely used in Freeciv. If two things
(server/client, program/datafile...) are incompatible, they have
different capabilities defined. Based on that they can detect
incompatibility and act gracely.
Be sure to update network capability string in fc_version if you break
network compatibility, so your patched server/client does not cause
problems to official Freeciv servers/clients trying to connect it.

If you distribute modified version of freeciv, even (or especially)
one network compatible with upstream, you should change also
FREECIV_DISTRIBUTOR in fc_version to match. This information is sent
by client to (public) server so in case there's any problems with certain
clients, we know a bit more what kind of code they are using.

----------------------------------------------------------------------
Shared libfreeciv
-----------------
Libfreeciv contains code common to server and client. By default it's
built as static library, but you can build it as shared library by
giving configure option "--enable-shared" (and possibly "--disable-static")

----------------------------------------------------------------------
Generated files
---------------
This is list of files Freeciv might generate to filesystem when running.
You may want to remove some of these when Freeciv is uninstalled.

* Client saves its options to file "~/.freeciv-client-rc-2.4"
* Server saves its readline history to file "~/.freeciv-server_history"
* When running local single player games, challenge files with name
  like "~/.freeciv/challenge_*_*" are generated
* When saving game in server launched by client, savegame go to
  "~/.freeciv/saves/"
* When saving game in independently launched server, savegames go
  to directory specified with "-s" command line option, defaulting
  to working directory
* freeciv-modpack saves data under "~/.freeciv/2.4/"
* Server can write log to file specified with "-l" command line option

----------------------------------------------------------------------
Building multiple clients at once
---------------------------------
Starting from 2.2 it has been possible to build multiple clients running
'make' just once. Just give configure option "--enable-client" comma
separated list of clients to compile, e.g. "--enable-client=gtk2,sdl,xaw,qt"

----------------------------------------------------------------------
Savegame compression support
----------------------------
Freeciv can use several different compression libraries for compressing
its savegames. See server setting "compresstype".
* zlib (gzip compression) is required to compile freeciv so zlib
  compression support is always present
* bzip2 compression is built into Freeciv if bzip2 libraries and
  headers are present at configure time
* xz compression is built into Freeciv if liblzma library and
  headers are present at configure time

While this feature is called "Savegame compression support" it actually
applies to loading of all the section files: savegames, rulesets, tileset
spec files... If compression support is built into Freeciv, you can
compress any of these files and Freeciv can still load them. Freeciv ships
with all the data files uncompressed, except scenarios which are gzipped.

----------------------------------------------------------------------
Loadable AI modules
-------------------
Freeciv can be built with support of loading AI code from custom module.
There can be multiple modules loaded at once, and AI players can use
different module from each other.
This feature is not enabled by default. When it's not enabled, default
AI code is built in to server and always used.
You can enable this feature with '--enable-aimodules'. For this to work
you have to enable also building of shared libraries (and modules) with
'--enable-shared' as discussed in chapter 'Shared libfreeciv'
All modules, both default and custom, must be installed under
${libdir}/fcai (/usr/lib/fcai for example) for their loading to work.

----------------------------------------------------------------------
Public servers
--------------
Sadly we have not resources to keep public servers for many different
Freeciv versions running. To give your users ability to play on public
servers, try to provide them as current Freeciv client version as possible.
To see list of currently running public servers, see
"http://meta.freeciv.org/metaserver.phtml" Note that from the web you
can see complete list, while list shown by Freeciv client only lists
compatible servers.

Any a.b.c release is network compatible with any a.b.d release. If you
provide 2.4.c client, it can be used to play on 2.4.d server.
